# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageName: '20210818/gt-Geo-API'

stages:
- stage: Prepare
  displayName: Prepare artifacts
  jobs:
  - job: BuildApp
    displayName: Build Application
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/target'
        artifact: 'app'

- stage: PublishArtifact
  displayName: Publish Artifact to Azure Artifacts
  dependsOn: Prepare
  condition: succeeded()
  jobs:
  - job: Publish
    displayName: Publish to gt-test-feed
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        artifact: 'app'
        path: '$(System.DefaultWorkingDirectory)/downloaded_artifact'
    - task: UniversalPackages@0
      inputs:
        command: 'publish'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        feedsToUsePublish: 'internal'
        vstsFeedPublish: 'fd7882c4-53b7-409b-a42c-259fdda2bdbc'
        vstsFeedPackagePublish: 'gt-geo-api'
        versionOption: 'patch'
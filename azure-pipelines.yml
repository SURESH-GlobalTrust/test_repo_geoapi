# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageName: '20210818/gt-Geo-API'
  dockerHubUsername: '20210818'
  fullImageName: '$(dockerHubUsername)/$(imageName):$(tag)'

stages:
- stage: Prepare
  displayName: Prepare artifacts
  jobs:
  - job: BuildApp
    displayName: Build Application
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact'
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/target'
        artifact: 'app'

- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifact'
      inputs:
        artifact: 'app'
        path: '$(Build.SourcesDirectory)/app'
    - task: Docker@2
      displayName: Build an image
      inputs:
        command: build
        repository: '$(imageName)'
        buildcontext: '$(Build.SourcesDirectory)'
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(fullImageName) 

- stage: Push
  displayName: Push image
  dependsOn: Build
  jobs:
  - job: Push
    displayName: Push
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        command: login
        containerRegistry: 'Azure-Docker Registry-Connection'
    - task: Docker@2
      displayName: Push image
      inputs:
        command: push
        repository: '$(imageName)'
        tags: |
          $(fullImageName) 

